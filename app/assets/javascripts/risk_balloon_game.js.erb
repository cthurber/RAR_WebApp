//# Place all the behaviors and hooks related to the matching controller here.
//# All this logic will automatically be available in application.js.
//# You can use CoffeeScript in this file: http://coffeescript.org/

//Daniel Giraldo- 2015
//Risk Balloon Prototype
function Game(){
    //Values coming from server
    this.inflation_rate;
	  this.max_inflation;
	  this.balloon_color;
	  this.cash_multiplier;
    this.player_id;
    this.research_id;
    this.game_id;
    this.next_game_id;

    //initial default variables
    this.isBalloonPopped = false;
	  this.turns = 0;
	  this.cashEarned = 1;
	  this.inflation= 1;
    this.finalEarnings;
}

Game.prototype.readPlayerID = function(){
  var player_id = parseInt($('#player_id').text());
  return player_id;
}

Game.prototype.readNextGameId = function(){
  var next_game_id = parseInt($('#next_game_id').text());
  return next_game_id;
}

Game.prototype.setGameDefaults = function(a,b,c,d,e,f){
    //set variables to initials variables
    this.inflation_rate= a;
    this.max_inflation=b;
    this.balloon_color = c;
    this.cash_multiplier = d;
    this.research_id=e;
    this.player_id= this.readPlayerID();
    this.next_game_id= this.readNextGameId();
    this.game_id= f;
}

Game.prototype.listGameVariables = function(){
    console.log("Inflation Rate: "+ this.inflation_rate);
    console.log("Inflation Max: "+ this.max_inflation);
    console.log("Color: "+ this.balloon_color);
    console.log("Cash Multiplier: "+ this.cash_multiplier);
    console.log("Player Id: "+this.player_id);
    console.log("Research Id: "+this.research_id);
    console.log("Game Id: "+this.game_id);
    console.log("Is balloon popped?: "+ this.isBalloonPopped);
    console.log("Number of Turns: "+ this.turns);
    console.log("Cashed Earned: "+ this.cashEarned);
    console.log("Inflation: "+ this.inflation);
}


Game.prototype.startGame = function(){
    var url = document.URL; // url to get JSON content
    console.log(url);
    //function to handle content returned by AJAX reponse
    //assign object to use in callback function below
    var game = this;
    //use ajax to get JSON content from server
    //assign variable to Game variables
    $.getJSON(url, function(response){
        // assign content from response to initial variables
        //session is the first object in the list
        //eventually we neeed to find the latest version of the session

        var session= response;
        console.log(session);
        //set the content to the default variables
        var id= session.id;
        var ir = session.inflation_rate;
        var im = session.max_inflation;
        var co = session.balloon_color;
        var cm = session.cash_multiplier;
        var ri = session.research_id;

        //set up game defaults
        game.setGameDefaults(ir,im, co, cm, ri, id);
        game.setBalloonColor();
    });
}

// set color of balloon
Game.prototype.setBalloonColor = function(){
    var color= "#"+this.balloon_color;
    $("#balloon-head").css("background-color",color);
    $("#balloon-head").addClass("balloon-shadow");
    $("#balloon-middle").css("border-bottom-color",color);
}

//keeps track of isBalloonPopped variable to see if balloon is popped.
Game.prototype.checkBalloonPop = function(){
    //check to see if balloon is popped
    if(this.inflation>=this.max_inflation){
			this.isBalloonPopped = true;
    }
    return this.isBalloonPopped;
}

//Controls command line game and triggers all other functions
Game.prototype.inflate = function(){
    //increase number of turns
    this.turns++;
    this.listGameVariables();

    if(!this.checkBalloonPop()){
        // trigger function to inflate ballon
        this.cashEarned+= this.turns*this.cash_multiplier;
        this.inflation*= this.inflation_rate;
        console.log("You've inflated the balloon "+ this.turns + " times");
        console.log("Total cash: "+ this.cashEarned);
        //populate data to screen
        this.populateDOM();
        inflateBallon();
        this.finalEarnings= this.cashEarned;
    }else{
        //populate data to screen
        this.finalEarnings= 0;
        this.gameOver();
        popBalloon();
        console.log("You lost");
        console.log("Total cash: "+ this.cashEarned);
    }
}

//ui actions
    //these functions will change the appearance of the content

Game.prototype.populateDOM = function(){
    $("#cash-earned").html(this.cashEarned);
    $("#times-inflated").html(this.turns);

}

//hide buttons so that user can't keep playing
Game.prototype.leaveGame= function(){
    $("#inflate").hide();
    $("#leave").hide();
    $("#content").append('<br><div class="btn btn-success"><a href="/risk_balloon_games/'+this.next_game_id+'">Continue</a></div>')
    this.submitData();
}

Game.prototype.gameOver = function(){
    //populate DOM with losing amount and game over message
    $("#content").html('<div class="description">You Lost: $<div id="cash-lost">'+this.cashEarned+'</div></div><br><div class="description">Game Over!</div><br>');
    //hide buttons
    this.leaveGame();
    // centerBox();
}


Game.prototype.submitData = function(){
    /// once user either loses or decides to retire
    //this function should be triggered
    //it should contain an ajax POST call to send
    //data to the server
    // The data will then be processed and save to database
    console.log("this was triggered");
    var url= window.location.protocol + "//" + window.location.host + "/"+"data_output_risk_balloon/";
    var data=
      {
          "player_id": (this.player_id).toString(),
          "risk_balloon_game_id": (this.game_id).toString(),
          "inflation_level": (this.inflation).toString(),
          "popped?": (this.isBalloonPopped).toString(),
          "earnings": (this.finalEarnings).toString(),
          "turns_taken": (this.turns).toString(),
          "time_played": "0"

      };
    // $.post(url, JSON.stringify(data), function(data){
    //   console.log(data);
    // });
    $.ajax({
      type: 'POST',
      url: url,
      data: JSON.stringify(data),
      error: function(e) {
        console.log(e);
      },
      dataType: "json",
      contentType: "application/json"
    });

}

// UI functions
//inflate Balloon
function inflateBallon(){
    //inflates balloon
    $( "#balloon-head" ).animate({
        width: "+=10px",
        height: "+=10px"
      }, 300);
}

//Pop Balloon
function popBalloon(){
  //todo: add balloon popping animation
   $("#balloon-head").effect("explode","easeInOutBounce", "slow");

}

//Centers display box once game is over
function centerBox(){
    $("#right-container").animate({
        width: "50%",
    }, 300);
    $("#right-container").css({'margin':'auto',     float:'none'});
}
